{"name":"Play-Example-Quality-Assurance","tagline":"Automated quality assurance tool integration (checkstyle, pmd, jacoco, findbugs, javadoc/scaladoc) for the Play Framework","body":"Overview\r\n========\r\n\r\nThis project illustrates how to integrate the following quality assurance tools with [Play](http://www.playframework.com/) applications:\r\n\r\n  * [PMD](http://pmd.sourceforge.net/) source code analysis\r\n  * [Checkstyle](http://checkstyle.sourceforge.net/) source code analysis\r\n  * [FindBugs](http://findbugs.sourceforge.net/) byte code analysis\r\n  * [JavaDoc](http://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html) and [ScalaDoc](http://docs.scala-lang.org/style/scaladoc.html) documentation generation\r\n  * [Jacoco](http://www.eclemma.org/jacoco/) test coverage analysis\r\n\r\nInstallation\r\n============\r\n\r\nAdding these tools to your Play project requires adding a `qa.sbt` file and changes to the [project/](project) directory:\r\n\r\n  * Create [qa.sbt](qa.sbt) to add commands to the play console; the contents of this file augment the contents of `build.sbt`.\r\n  * Update [plugins.sbt](project/plugins.sbt) to add libraries.\r\n  * Add command definition files: [ApiDocSettings.scala](project/ApiDocSettings.scala), [CheckstyleSettings.scala](project/CheckstyleSettings.scala), and [PmdSettings.scala](project/PmdSettings.scala).\r\n  * Add (and maybe modify) configuration files: [checkstyle-config.xml](project/checkstyle-config.xml), [pmd-ruleset.xml](project/pmd-ruleset.xml), and [findbugs-excludefilter.xml](project/findbugs-excludefilter.xml).\r\n  \r\nScreencast\r\n==========\r\n\r\nClick the image below to watch a 14 minute walkthrough of this example:\r\n\r\n[<img src=\"https://raw.github.com/ics-software-engineering/play-example-quality-assurance/master/doc/play-example-quality-assurance-screenshot.png\" width=\"400\">](https://www.youtube.com/watch?v=uRknW9EjISw)  \r\n  \r\n\r\nExample invocations\r\n===================\r\n\r\nPMD\r\n---\r\n\r\n```\r\n[~/projecthosting/github/play-example-quality-assurance]-> play pmd\r\n[info] Loading project definition from /Users/johnson/projecthosting/github/play-example-quality-assurance/project\r\n[info] Set current project to play-example-quality-assurance (in build file:/Users/johnson/projecthosting/github/play-example-quality-assurance/)\r\n[info] Running PMD...\r\n[info] \r\n[success] Total time: 1 s, completed Jun 10, 2013 1:33:54 PM\r\n```\r\n\r\nThe output file is in `target/pmd/pmd-report.txt` and echoed to the console.  \r\nFor Play's default application, no PMD warnings are generated, resulting in a blank info line output.\r\n\r\nModify [pmd-ruleset.xml](project/pmd-ruleset.xml) to change the way PMD analyzes your code. \r\n\r\nCheckstyle\r\n----------\r\n\r\n```\r\n[~/projecthosting/github/play-example-quality-assurance]-> play checkstyle\r\n[info] Loading project definition from /Users/johnson/projecthosting/github/play-example-quality-assurance/project\r\n[info] Set current project to play-example-quality-assurance (in build file:/Users/johnson/projecthosting/github/play-example-quality-assurance/)\r\n[info] Running checkstyle...\r\n[info] Starting audit...\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:0: Missing package-info.java file.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:3: Using the '.*' form of import should be avoided - play.*.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:4: Using the '.*' form of import should be avoided - play.mvc.*.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:6: Using the '.*' form of import should be avoided - views.html.*.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:8: Missing a Javadoc comment.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:9: Line has trailing spaces.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:10:5: Missing a Javadoc comment.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/controllers/Application.java:13: Line has trailing spaces.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/views/index.scala.html:4: Line has trailing spaces.\r\n[info] /Users/johnson/projecthosting/github/play-example-quality-assurance/app/views/index.scala.html:6: Line has trailing spaces.\r\n[info] Audit done.\r\n[success] Total time: 1 s, completed Jun 10, 2013 1:39:55 PM\r\n```\r\n\r\nThe output file is in `target/checkstyle/checkstyle-report.txt` and also echoed to the console. \r\nFor Play's default application, 10 Checkstyle warnings are generated.\r\n\r\nModify [checkstyle-config.xml](project/checkstyle-config.xml) to change the way Checkstyle analyzes your code.\r\n\r\nFindBugs\r\n--------\r\n\r\n```\r\n[~/projecthosting/github/play-example-quality-assurance]-> play findbugs\r\n[info] Loading project definition from /Users/johnson/projecthosting/github/play-example-quality-assurance/project\r\n[info] Set current project to play-example-quality-assurance (in build file:/Users/johnson/projecthosting/github/play-example-quality-assurance/)\r\n[success] Total time: 7 s, completed Jun 10, 2013 1:45:10 PM\r\n```\r\n\r\nThe output file is in `target/findbugs/findbugs.xml`.  \r\nFor Play's default application, no FindBug errors are generated, but the plugin will output the number of warnings found if non-zero.\r\n\r\nModify [findbugs-excludefilter.xml](project/findbugs-excludefilter.xml) to change the way findbugs processes your code. \r\nAdditional FindBugs configuration options can be provided in [qa.sbt](qa.sbt).\r\n\r\nJacoco\r\n------\r\n\r\n```\r\n[~/projecthosting/github/play-example-quality-assurance]-> play jacoco:cover\r\n[info] Loading project definition from /Users/johnson/projecthosting/github/play-example-quality-assurance/project\r\n[info] Set current project to play-example-quality-assurance (in build file:/Users/johnson/projecthosting/github/play-example-quality-assurance/)\r\n[info] ApplicationTest\r\n[info] + ApplicationTest.simpleCheck\r\n[info] + ApplicationTest.renderTemplate\r\n[info] \r\n[info] \r\n[info] Total for test ApplicationTest\r\n[info] Finished in 0.239 seconds\r\n[info] 2 tests, 0 failures, 0 errors\r\n[info] IntegrationTest\r\n[info] + IntegrationTest.test\r\n[info] \r\n[info] \r\n[info] Total for test IntegrationTest\r\n[info] Finished in 2.875 seconds\r\n[info] 1 tests, 0 failures, 0 errors\r\n[info] Passed: : Total 3, Failed 0, Errors 0, Passed 3, Skipped 0\r\n[success] Total time: 4 s, completed Jun 10, 2013 1:51:29 PM\r\n```\r\n\r\nThe output report is available in `target/jacoco/html/index.html`.  \r\nFor Play's default application, statement coverage is 57%.\r\n\r\nJacoco configuration options can be provided in [qa.sbt](qa.sbt).\r\n\r\nJavaDoc and ScalaDoc\r\n--------------------\r\n\r\n```\r\n[~/projecthosting/github/play-example-quality-assurance]-> play api-doc\r\n[info] Loading project definition from /Users/johnson/projecthosting/github/play-example-quality-assurance/project\r\n[info] Set current project to play-example-quality-assurance (in build file:/Users/johnson/projecthosting/github/play-example-quality-assurance/)\r\n[info] No sources available, skipping Scala API documentation...\r\n[info] Creating destination directory: \"target/doc/api/java/\"\r\n[info] Loading source files for package controllers...\r\n[info] Loading source files for package tests...\r\n[info] Constructing Javadoc information...\r\n[info] Standard Doclet version 1.7.0_10\r\n[info] Building tree for all the packages and classes...\r\n[info] Generating target/doc/api/java/controllers/Application.html...\r\n[info] Generating target/doc/api/java/tests/ApplicationTest.html...\r\n[info] Generating target/doc/api/java/tests/IntegrationTest.html...\r\n[info] Generating target/doc/api/java/overview-frame.html...\r\n[info] Generating target/doc/api/java/controllers/package-frame.html...\r\n[info] Generating target/doc/api/java/controllers/package-summary.html...\r\n[info] Generating target/doc/api/java/controllers/package-tree.html...\r\n[info] Generating target/doc/api/java/tests/package-frame.html...\r\n[info] Generating target/doc/api/java/tests/package-summary.html...\r\n[info] Generating target/doc/api/java/tests/package-tree.html...\r\n[info] Generating target/doc/api/java/constant-values.html...\r\n[info] Generating target/doc/api/java/src-html/controllers/Application.html...\r\n[info] Generating target/doc/api/java/src-html/tests/IntegrationTest.html...\r\n[info] Generating target/doc/api/java/src-html/tests/ApplicationTest.html...\r\n[info] Building index for all the packages and classes...\r\n[info] Generating target/doc/api/java/overview-tree.html...\r\n[info] Generating target/doc/api/java/index-all.html...\r\n[info] Generating target/doc/api/java/deprecated-list.html...\r\n[info] Building index for all classes...\r\n[info] Generating target/doc/api/java/allclasses-frame.html...\r\n[info] Generating target/doc/api/java/allclasses-noframe.html...\r\n[info] Generating target/doc/api/java/index.html...\r\n[info] Generating target/doc/api/java/overview-summary.html...\r\n[info] Generating target/doc/api/java/help-doc.html...\r\nAPI documentation in target/doc/api\r\n\r\n[success] Total time: 2 s, completed Jun 10, 2013 1:55:36 PM\r\n```\r\n\r\nThe API documentation can be found in `target/doc/api`.\r\n\r\nNOTE: With this approach, in order for test code to be documented by JavaDoc, you must locate them a package called \r\n\"tests\" inside the top-level test/ directory. See this repo for an example.\r\nThis is a change from the \"play new\" command, which puts the sample tests in the default package.  Creating a\r\n\"tests\" package creates consistency with the existing Play convention of \"controllers\", \"models\", and \"views\"\r\npackages.  \r\n\r\nTo modify the output, edit [ApiDocSettings.scala](project/ApiDocSettings.scala).\r\n\r\nCredits\r\n=======\r\n\r\n  * Tweaked docs and migrated to Play 2.2.0 build.sbt format, thanks to Mike Slinn: https://github.com/mslinn\r\n  * Checkstyle and PMD integration thanks to Lily Masory: https://github.com/ymasory/sbt-code-quality.g8\r\n  * Findbugs integration thanks to Joachim Hofer: https://bitbucket.org/jmhofer/findbugs4sbt/wiki/Home\r\n  * Jacoco integration thanks to Joachim Hofer: https://bitbucket.org/jmhofer/jacoco4sbt\r\n  * JavaDoc/ScalaDoc integration thanks to Yvonnick Esnault: https://github.com/yesnault/Play20StartApp/\r\n  \r\nPlay version\r\n------------\r\n\r\nLast tested on Play 2.2.0\r\n\r\nBuild status\r\n------------\r\n  [![Build Status](https://philipmjohnson.ci.cloudbees.com/buildStatus/icon?job=play-example-quality-assurance)](https://philipmjohnson.ci.cloudbees.com/job/play-example-quality-assurance/) \r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}